function countingSortInsert(e,t,s,n){if(!(e instanceof Array))throw new TypeError('1st param "arr" must be an array');if(!(t instanceof Array))throw new TypeError('1st param "arrReduced" must be an array');for(let e=n+1;e<t.length;e++){const s=t[e];s&&(s[0]++,s[1]++)}const i=t[n];if(i)i[1]++;else{for(var r=n-1;r>=0;r--){const e=t[r];if(e){const s=e[1]+1;t[n]=[s,s];break}}r<0&&(t[n]=[0,0])}e.splice(t[n][1],0,s)}Vue.component("abbreviation-autocomplete",{data:function(){return{mutableSearchText:this.searchText,searchItemsVisible:!1,recentlySelected:!1,selected:-1}},props:{data:{required:!0,type:Array},limit:{default:1/0,type:Number},minSearchTextLength:{default:1,type:Number},placeholder:String,searchText:{default:"",type:String}},computed:{searchList:function(){if(this.mutableSearchText.length>=this.minSearchTextLength){const e=[],t=[];return this.data.forEach((s=>{const n=s.d.toLowerCase().indexOf(this.mutableSearchText.toLowerCase());n>=0&&(countingSortInsert(t,e,s,n),s.substrIndex=n)})),t.length<=this.limit?t:t.slice(0,this.limit)}return[]}},watch:{mutableSearchText:function(){this.onSearchTextChange()}},methods:{onSearchTextChange:function(){this.recentlySelected?this.recentlySelected=!1:(this.searchItemsVisible=!0,this.selected=-1,this.$emit("update:search-text",this.mutableSearchText))},select:function(){-1!==this.selected&&(this.searchItemsVisible=!1,delete this.searchList[this.selected].substrIndex,this.$emit("select",JSON.parse(JSON.stringify(this.searchList[this.selected]))),this.mutableSearchText=this.searchList[this.selected].a,this.recentlySelected=!0)},selectDown:function(){this.selected=(this.selected+1)%this.searchList.length},selectUp:function(){-1===this.selected&&(this.selected=0);const e=this.searchList.length;this.selected=(this.selected+e-1)%e}},template:'\n<div class="abbreviation-autocomplete">\n  <input type="text" :placeholder="placeholder" v-model="mutableSearchText" @focus="searchItemsVisible = true" @blur="searchItemsVisible = false" @keyup.enter="select" @keydown.down="selectDown" @keydown.up="selectUp">\n  <ul v-show="searchItemsVisible" @mousedown="select">\n    <li v-for="(element, index) in searchList" :class="{ selected: index === selected }" @mouseover="selected = index">\n      <span>{{ element.a }}</span>\n      <span> ({{ element.d.substr(0, element.substrIndex) }}</span><span class="highlight">{{ element.d.substr( element.substrIndex , mutableSearchText.length) }}</span><span>{{ element.d.substr(element.substrIndex + mutableSearchText.length) }})</span>\n    </li>\n  </ul>\n</div>\n',created:function(){this.data.sort(((e,t)=>e.d.localeCompare(t.d)))}});
